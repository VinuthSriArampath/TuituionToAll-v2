name: CI/CD pipeline

on:
  pull_request:
    branches:
      - release/production
  push:
    branches:
      - release/production
    tags:
      - 'v*.*.*'
env:
  JAVA_VERSION: 22
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Extract Project Version
        id: get_version
        run: |
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            echo "PROJECT_VERSION=$VERSION" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=v$VERSION" >> $GITHUB_OUTPUT
            echo "Extracted version: $VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.get_version.outputs.PROJECT_VERSION }}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
              JAR_FILE=${{ steps.find_jar.outputs.JAR_PATH }}